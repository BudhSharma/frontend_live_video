{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","username","setUsername","className","type","name","style","width","borderRadius","padding","fontSize","value","onChange","e","target","margin","marginTop","height","fontFamily","onClick","console","log","axios","post","email","then","response","URL","data","join_url","replaceAll","window","location","replace","catch","err","error","float","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAwFeA,MAlFf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAoBA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,8CACA,sBAAKA,UAAU,OAAf,UACE,8CAEE,uBACEC,KAAK,OACLC,KAAK,OACLC,MAAO,CACLC,MAAO,QACPC,aAAc,MACdC,QAAS,WACTC,SAAU,QAEZC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAYW,EAAEC,OAAOH,aAI1C,sBAAKR,UAAU,MAAMG,MAAO,CAAES,OAAQ,QAAtC,UACE,qBAAKZ,UAAU,SAAf,SACE,qBACEA,UAAU,MACVG,MAAO,CAAES,OAAQ,OAAQC,UAAW,SAFtC,SAIE,wBACEb,UAAU,eACVG,MAAO,CACLC,MAAO,QACPU,OAAQ,OACRP,SAAU,OACVQ,WAAY,WAEdC,QAtDI,WAIlBC,QAAQC,IAAIpB,GACZqB,IACGC,KADH,0CAJa,CACXC,MAAO,6BAKNC,MAAK,SAACC,GACL,IAAIC,EACFD,EAASE,KAAKC,SAASC,WACrB,6BACA,2BAFF,uBAGoB7B,GACtBmB,QAAQC,IAAIM,GACZI,OAAOC,SAASC,QAAhB,UAA2BN,OAE5BO,OAAM,SAACC,GAAD,OAASf,QAAQgB,MAAMD,OA8BpB,gCAcJ,qBAAKhC,UAAU,SAASG,MAAO,CAAE+B,MAAO,SAAxC,SACE,qBACEC,IAAI,gBACJrB,OAAO,QACPV,MAAM,QACND,MAAO,CACLS,OAAQ,OACRP,aAAc,QAEhB+B,IAAI,mBClELC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.505fefa2.chunk.js","sourcesContent":["// import meeting from \"./meeting.png\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n\n  const zoomMeeting = () => {\n    const data = {\n      email: \"hemant26122002@gmail.com\",\n    };\n    console.log(username);\n    axios\n      .post(`https://live-video.onrender.com/meeting`, data)\n      .then((response) => {\n        let URL =\n          response.data.join_url.replaceAll(\n            \"https://us04web.zoom.us/j/\",\n            \"http://localhost:9996/?\"\n          ) + `?role=1?name=${username}`;\n        console.log(URL);\n        window.location.replace(`${URL}`);\n      })\n      .catch((err) => console.error(err));\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <Student /> */}\n        <h1>Zoom Meeting</h1>\n        <div className=\"card\">\n          <h5>\n            Name&nbsp;&nbsp;\n            <input\n              type=\"text\"\n              name=\"name\"\n              style={{\n                width: \"300px\",\n                borderRadius: \"5px\",\n                padding: \"8px 12px\",\n                fontSize: \"18px\",\n              }}\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </h5>\n\n          <div className=\"row\" style={{ margin: \"10px\" }}>\n            <div className=\"column\">\n              <div\n                className=\"row\"\n                style={{ margin: \"10px\", marginTop: \"120px\" }}\n              >\n                <button\n                  className=\"btn btn-info\"\n                  style={{\n                    width: \"290px\",\n                    height: \"80px\",\n                    fontSize: \"20px\",\n                    fontFamily: \"cursive\",\n                  }}\n                  onClick={zoomMeeting}\n                >\n                  Create Meeting\n                </button>\n              </div>\n            </div>\n            <div className=\"column\" style={{ float: \"right\" }}>\n              <img\n                src=\"\\meeting.png\"\n                height=\"330px\"\n                width=\"400px\"\n                style={{\n                  margin: \"10px\",\n                  borderRadius: \"50px\",\n                }}\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}